<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <artifactId>rosie-jni-native</artifactId>
    <packaging>so</packaging>
    <parent>
        <groupId>com.github.antoniomacri</groupId>
        <artifactId>rosie-bundle</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>

    <dependencies>
        <dependency>
            <groupId>${parent.groupId}</groupId>
            <artifactId>rosie-pattern-language</artifactId>
            <version>${project.version}</version>
            <!-- Reference the ID of the assembly -->
            <classifier>libs</classifier>
            <type>tar</type>
        </dependency>

        <dependency>
            <groupId>${parent.groupId}</groupId>
            <artifactId>rosie-jni-java</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Unpack header files and libraries for build -->
                    <execution>
                        <id>unpack</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeTypes>tar</includeTypes>
                            <outputDirectory>
                                ${project.build.directory}
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <compilerProvider>generic</compilerProvider>
                    <compilerStartOptions>
                        <compilerStartOption>
                            -fPIC -O -Wall
                        </compilerStartOption>
                    </compilerStartOptions>
                    <javahOS>linux</javahOS>
                    <sources>
                        <source>
                            <directory>jni</directory>
                            <fileNames>
                                <fileName>TestObject.cpp</fileName>
                            </fileNames>
                        </source>
                        <source>
                            <directory>
                                ${project.build.directory}/rosie-pattern-language-${project.version}/include
                            </directory>
                        </source>
                    </sources>
                    <linkerStartOptions>
                        <linkerStartOption>
                            -shared
                            -L${project.build.directory}/rosie-pattern-language-${project.version}/lib
                            -lstdc++
                        </linkerStartOption>
                    </linkerStartOptions>
                    <linkerEndOptions>
                        <linkerEndOption>
                            -lexample
                        </linkerEndOption>
                    </linkerEndOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>javah</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <javahClassNames>
                                <className>
                                    com.github.antoniomacri.TestObject
                                </className>
                            </javahClassNames>
                        </configuration>
                        <goals>
                            <goal>javah</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
